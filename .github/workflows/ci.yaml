name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Create .env file
      run: |
        echo "POSTGRES_PASSWORD=test_password" > .env
        echo "DB_PASSWORD=test_password" >> .env
        echo "DB_HOST=timescaledb" >> .env
        echo "DB_PORT=5432" >> .env
        echo "DB_NAME=timeseries" >> .env
        echo "DB_USER=postgres" >> .env

    - name: Set up Docker Compose
      run: |
        docker-compose up -d timescaledb
        # Wait for TimescaleDB to be ready
        for i in {1..30}; do
          if docker exec my-timescaledb pg_isready -U postgres; then
            break
          fi
          sleep 2
        done

    - name: Create virtual environment and install dependencies
      run: |
        cd app
        python -m venv venv
        . venv/bin/activate
        pip install -r requirements.txt

    - name: Run tests
      run: |
        cd app
        . venv/bin/activate
        pytest tests/test_api.py -v --log-cli-level=DEBUG
      env:
        DB_HOST: timescaledb
        DB_PASSWORD: test_password

    - name: Clean up
      if: always
      run: |
        docker-compose down
        docker volume rm data_serve_pgdata || true